name: Build on Pull Request

on:
  pull_request:
    types: [opened, reopened]
    branches: [main]
  push:
    branches: ['*']

env:
  QT_BUILD_DIR: JetRacer/src/head_unit/cluster_qt/build
  ROS_BUILD_DIR: JetRacer
  QT_QPA_PLATFORM: offscreen

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      build-status: ${{ steps.build_step.outcome }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
          sudo apt-get install -y clang build-essential cmake curl git wget qt6-base-dev qt6-tools-dev-tools qt6-multimedia-dev cargo software-properties-common
          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-18 100

      - name: Install run-clang-tidy (Rust wrapper)
        run: |
          sudo git clone https://github.com/lmapii/run-clang-tidy.git
          cd run-clang-tidy
          cargo build --release --target-dir /tmp/target
          sudo mv /tmp/target/release/run-clang-tidy /usr/local/bin/run-clang-tidy-rust

      - name: Install ROS 2 Humble
        run: |
          sudo add-apt-repository universe
          sudo apt update
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt update && sudo apt install -y ros-humble-desktop ros-dev-tools

      - name: Clone and build CARLA ROS bridge
        run: |
          mkdir -p carla-ros-bridge
          cd carla-ros-bridge
          git clone --recurse-submodules https://github.com/carla-simulator/ros-bridge.git src/ros-bridge
          source /opt/ros/humble/setup.bash
          sed -i 's/cmake_minimum_required(VERSION [0-9.]\+)/cmake_minimum_required(VERSION 3.16)/' src/ros-bridge/carla_msgs/CMakeLists.txt
          colcon build --packages-select carla_msgs --symlink-install
          source install/setup.bash

      - name: Build the main project
        id: build_step
        run: |
          source /opt/ros/humble/setup.bash
          cd $ROS_BUILD_DIR
          sudo rosdep init || true
          rosdep update
          rosdep install --from-paths . --ignore-src -r -y
          source $GITHUB_WORKSPACE/carla-ros-bridge/install/setup.bash
          colcon build --symlink-install

      - name: Upload install artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ros-install
          path: JetRacer/install/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ros-build
          path: JetRacer/build/

  test:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download install and build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ros-install
          path: JetRacer/install/
      
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: ros-build
          path: JetRacer/build/

      - name: Install ROS 2 Humble
        run: |
          sudo apt update
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt update && sudo apt install -y ros-humble-desktop

      - name: Run Tests
        run: |
          source /opt/ros/humble/setup.bash
          cd $ROS_BUILD_DIR
          source ./install/setup.bash
          colcon test --ctest-args tests --packages-skip camera_ros --executor sequential
          colcon test-result --all --verbose

  tidy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ros-build
          path: JetRacer/build/

      - name: Install clang-tidy
        run: |
          sudo apt update
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
          sudo apt-get install -y clang cargo
          sudo git clone https://github.com/lmapii/run-clang-tidy.git
          cd run-clang-tidy
          cargo build --release --target-dir /tmp/target
          sudo mv /tmp/target/release/run-clang-tidy /usr/local/bin/run-clang-tidy-rust

      - name: Run clang-tidy
        run: |
          cd $ROS_BUILD_DIR
          run-clang-tidy-rust tidy.json -j 4 --suppress-warnings

