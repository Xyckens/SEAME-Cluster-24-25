name: Build on Pull Request

on:
  pull_request:
    types: [opened, reopened]
    branches:
      - main
  push:
    branches:
      - main

env:
  QT_BUILD_DIR: JetRacer/src/head_unit/cluster_qt/build
  ROS_BUILD_DIR: JetRacer

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Install Clang
      run: |
        sudo apt-get update
        sudo apt-get install -y clang

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential cmake

    - name: Install Qt
      run: |
        sudo apt-get install -y qt6-base-dev qt6-tools-dev-tools
        sudo apt-get install -y qt6-multimedia-dev

    - name: Install ROS2 jazzy
      run: |
         sudo apt install -y software-properties-common
         sudo add-apt-repository universe
         sudo apt install -y curl gnupg2 lsb-release
         sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
         echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
         sudo apt update && sudo apt install ros-dev-tools
         sudo apt install -y ros-jazzy-desktop
         source /opt/ros/jazzy/setup.bash

    - name: Build ros packages
      run: |
          cd $ROS_BUILD_DIR
          colcon build --symlink-install

    - name: Build the project
      run: |
        mkdir -p $QT_BUILD_DIR
        cd $QT_BUILD_DIR
        cmake ..
        cmake --build . -- -j$(nproc)

    - name: Testing the Cluster
      run: |
        cd $QT_BUILD_DIR/cluster_tests
        export QT_QPA_PLATFORM=offscreen
        ctest --verbose
  
